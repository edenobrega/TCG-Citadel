// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TCG_Citadel.Data.MTG;

namespace TCG_Citadel.Data.MTG.Migrations
{
    [DbContext(typeof(MtgDbContext))]
    [Migration("20210125155318_CreateMtgTables")]
    partial class CreateMtgTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("TCG_Citadel.Data.MTG.Models.Card", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Artist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Booster")
                        .HasColumnType("bit");

                    b.Property<string>("Border_Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CMC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Collector_Number")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Color_Identity")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Colors")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Digital")
                        .HasColumnType("int");

                    b.Property<decimal?>("EUR")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("EUR_Foil")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Flavor_text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Frame_Effect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Full_Art")
                        .HasColumnType("bit");

                    b.Property<string>("Hand_Modifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasFoil")
                        .HasColumnType("bit");

                    b.Property<bool>("HasNonFoil")
                        .HasColumnType("bit");

                    b.Property<string>("Image_Art_Crop")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Image_Large")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Image_Normal")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Image_Small")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Keywords")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Layout")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Legalality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Loyalty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManaCost")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Oracle_ID")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Oracle_Text")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Power")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Promo")
                        .HasColumnType("bit");

                    b.Property<int>("Rarity")
                        .HasColumnType("int");

                    b.Property<bool>("Reprint")
                        .HasColumnType("bit");

                    b.Property<string>("Set")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Toughness")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Type_Line")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("USD")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("USD_Foil")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("MTG_Cards");
                });

            modelBuilder.Entity("TCG_Citadel.Data.MTG.Models.Rarity", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.ToTable("MTG_Rarities");
                });

            modelBuilder.Entity("TCG_Citadel.Data.MTG.Models.Set", b =>
                {
                    b.Property<int>("Citadel_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Block")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Block_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Card_Count")
                        .HasColumnType("int");

                    b.Property<string>("Cards_Api_Call")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateReleased")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Digital")
                        .HasColumnType("bit");

                    b.Property<bool>("Foil_Only")
                        .HasColumnType("bit");

                    b.Property<string>("Icon_Svg_Uri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NonFoil_Only")
                        .HasColumnType("bit");

                    b.Property<string>("Parent_set_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Set_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Set_Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Citadel_ID");

                    b.ToTable("MTG_Sets");
                });

            modelBuilder.Entity("TCG_Citadel.Data.MTG.Models.SetType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("MTG_SetTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
